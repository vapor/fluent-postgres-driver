name: test
on: [ 'pull_request' ]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        dbimage:
          - postgres:14
          - postgres:13
          - postgres:12
          - postgres:11
        dbauth:
          - trust
          - md5
          - scram-sha-256
        swiftver:
          - swift:5.2
          - swift:5.5
          - swiftlang/swift:nightly-main
        swiftos:
          - focal
    container: ${{ format('{0}-{1}', matrix.swiftver, matrix.swiftos) }}
    runs-on: ubuntu-latest
    env:
      LOG_LEVEL: debug
      POSTGRES_DB: 'vapor_database'
      POSTGRES_DATABASE: 'vapor_database'
      POSTGRES_DATABASE_A: 'vapor_database'
      POSTGRES_DATABASE_B: 'vapor_database'
      POSTGRES_USER: 'vapor_username'
      POSTGRES_USERNAME: 'vapor_username'
      POSTGRES_USERNAME_A: 'vapor_username'
      POSTGRES_USERNAME_B: 'vapor_username'
      POSTGRES_PASSWORD: 'vapor_password'
      POSTGRES_PASSWORD_A: 'vapor_password'
      POSTGRES_PASSWORD_B: 'vapor_password'
      POSTGRES_HOSTNAME_A: 'psql-a'
      POSTGRES_HOSTNAME_B: 'psql-b'
      POSTGRES_HOST_AUTH_METHOD: ${{ matrix.dbauth }}
    services:
      psql-a:
        image: ${{ matrix.dbimage }}
        env:
          POSTGRES_USER: 'vapor_username'
          POSTGRES_DB: 'vapor_database'
          POSTGRES_PASSWORD: 'vapor_password'
          POSTGRES_HOST_AUTH_METHOD: ${{ matrix.dbauth }}
          POSTGRES_INITDB_ARGS: --auth-host=${{ matrix.dbauth }}
      psql-b:
        image: ${{ matrix.dbimage }}
        env:
          POSTGRES_USER: 'vapor_username'
          POSTGRES_DB: 'vapor_database'
          POSTGRES_PASSWORD: 'vapor_password'
          POSTGRES_HOST_AUTH_METHOD: ${{ matrix.dbauth }}
          POSTGRES_INITDB_ARGS: --auth-host=${{ matrix.dbauth }}
    steps:
      - name: Check out package
        uses: actions/checkout@v2
      - name: Run unit tests
        run: swift test --enable-test-discovery

  macos-all:
    strategy:
      fail-fast: false
      matrix:
        dbimage:
          - postgresql@14
          - postgresql@13
        dbauth:
          - scram-sha-256
        xcode:
          - latest-stable
          - latest
    runs-on: macos-11
    env:
      LOG_LEVEL: debug
      POSTGRES_HOSTNAME_A: 127.0.0.1
      POSTGRES_HOSTNAME_B: 127.0.0.1
      POSTGRES_USERNAME_A: 'vapor_username'
      POSTGRES_USERNAME_B: 'vapor_username'
      POSTGRES_PASSWORD_A: 'vapor_password'
      POSTGRES_PASSWORD_B: 'vapor_password'
      POSTGRES_DATABASE_A: 'postgres'
      POSTGRES_DATABASE_B: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: ${{ matrix.dbauth }}
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode }}
      - name: Install Postgres, setup DB and auth, and wait for server start
        run: |
          export PATH="$(brew prefix)/opt/${{ matrix.dbimage }}/bin:$PATH" PGDATA=/tmp/vapor-postgres-test
          brew install ${{ matrix.dbimage }}
          initdb --locale=C --auth-host ${{ matrix.dbauth }} -U $POSTGRES_USERNAME_A --pwfile=<(echo $POSTGRES_PASSWORD_A)
          pg_ctl start --wait
          createdb -O$POSTGRES_USERNAME_A $POSTGRES_DATABASE_A && createdb -O$POSTGRES_USERNAME_A $POSTGRES_DATABASE_A
          psql $POSTGRES_DATABASE_A <<<"ALTER SCHEMA public OWNER TO $POSTGRES_USERNAME_A;"
          psql $POSTGRES_DATABASE_B <<<"ALTER SCHEMA public OWNER TO $POSTGRES_USERNAME_B;"
        timeout-minutes: 2
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run all tests
        run: |
          swift test --enable-test-discovery -Xlinker -rpath \
                -Xlinker $(xcode-select -p)/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift-5.5/macosx
