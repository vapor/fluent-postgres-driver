name: test
on:
  pull_request:
  push:
    branches:
    - main
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runner:
          - swift:5.2-xenial
          - swift:5.2-bionic
          - swift:5.2-focal
          - swift:5.2-centos7
          - swift:5.2-centos8
          - swift:5.2-amazonlinux2
          - swift:5.3-xenial
          - swift:5.3-bionic
          - swift:5.3-focal
          - swift:5.3-centos7
          - swift:5.3-centos8
          - swift:5.3-amazonlinux2
          - swift:5.4-bionic
          - swift:5.4-focal
          - swift:5.4-centos7
          - swift:5.4-centos8
          - swift:5.4-amazonlinux2
          - swiftlang/swift:nightly-5.5-focal
          - swiftlang/swift:nightly-5.5-centos8
          - swiftlang/swift:nightly-5.5-amazonlinux2
          - swiftlang/swift:nightly-main-focal
          - swiftlang/swift:nightly-main-centos8
          - swiftlang/swift:nightly-main-amazonlinux2
        dbimage: 
          - postgres:11
          - postgres:12
          - postgres:13
    container: ${{ matrix.runner }}
    services:
      postgres-a:
        image: ${{ matrix.dbimage }}
        env: 
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: vapor_database
      postgres-b:
        image: ${{ matrix.dbimage }}
        env:
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: vapor_database
    env:
      POSTGRES_HOSTNAME_A: postgres-a
      POSTGRES_HOSTNAME_B: postgres-b
      LOG_LEVEL: info
    steps:
      - name: Workaround SPM incompatibility with old Git on CentOS 7
        if: ${{ contains(matrix.runner, 'centos7') }}
        run: |
          yum install -y make libcurl-devel
          git clone https://github.com/git/git -bv2.28.0 --depth 1 && cd git
          make prefix=/usr -j all install NO_OPENSSL=1 NO_EXPAT=1 NO_TCLTK=1 NO_GETTEXT=1 NO_PERL=1
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
  macOS:
    strategy:
      fail-fast: false
      matrix:
        include: 
          - formula: postgresql@11
            datadir: postgresql@11
          - formula: postgresql@12
            datadir: postgres
        xcode:
          - latest
          - latest-stable
    env:
      POSTGRES_DATABASE_A: vapor_database_a
      POSTGRES_DATABASE_B: vapor_database_b
    runs-on: macos-latest
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with: 
          xcode-version: ${{ matrix.xcode }}
      - name: Replace Postgres install and start server
        run: |
          brew uninstall --force postgresql php && rm -rf /usr/local/{etc,var}/{postgres,pg}*
          brew install ${{ matrix.formula }} && brew link --force ${{ matrix.formula }}
          initdb --locale=C -E UTF-8 $(brew --prefix)/var/${{ matrix.datadir }}
          brew services start ${{ matrix.formula }}
      - name: Wait for server to be ready
        run: until pg_isready; do sleep 1; done
        timeout-minutes: 2
      - name: Setup users and databases for Postgres
        run: |
          createuser --createdb --login vapor_username
          for db in vapor_database_{a,b}; do
            createdb -Ovapor_username $db && psql $db <<<"ALTER SCHEMA public OWNER TO vapor_username;"
          done
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
